1.clone
git clone url

2.remote add
git remote add origin url
git push -u origin master

3.show
git remote show origin

3.remame
git mv name1 name2: mv name1 name2 && git rm name1 && git add name2
git commit -m ""
git push

4.commit
git commit -m "message"
git commit -a -m : git add && git commit -m

5.fetch
  git fetch= fetch
  git pull = fetch+merge
6.pull
  git pull 
  git pull origin master
7.diff
  git diff: show the diff between staged and work dir
  git diff --cached: show the diff between stated and committed
  git status(after commit)
8.show logs
  git log
9.remove files
  1) rm -rf filename; git commit -m "message"; git push
  2) git rm filename; git commit -m "message"; git push
10.remove local and pull from remote
  rm -rf file
  git checkout ./
11.branch
  git branch(show local branch)
  git branch -a(show all branch)
  git checkout branchname (switch branch)
  
12.stash
 error: Your local changes to the following files would be overwritten by merge
 git stash / git checkout -f
 git pull
13.proxy
export http_proxy="http://l00164768:pwd@proxycn2.huawei.com:8080"
export https_proxy="https://l00164768:pwd@proxycn2.huawei.com:8080"

git config --global http.proxy="http://CHINA\\l00164768:pwd@proxycn2.huawei.com:8080"
git config --global https.proxy="https://CHINA\\l00164768:pwd@proxycn2.huawei.com:8080"
~/.gitconfig
14.rollback
git commit --amend: to reset commit message
git reset HEAD filename: to remove staged changes

15.confict
1) resolve confict mannully
2) commit -am "message" = commit add filename && git commit filename  -m "message"

16.merge branch
git checkout master
git merge branchname: if confict, do as 15


17.store passwd for push
git config --global credential.helper store
